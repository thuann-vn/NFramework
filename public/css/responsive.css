/* Large Devices, Wide Screens */

@media only screen and (max-width: 1200px) {
  .container {
    max-width: 960px;
  }
}

/* Medium Devices, Desktops */

@media only screen and (max-width: 992px) {
  header.with-background .top-nav,
  header .top-nav {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  header.with-background .top-nav .logo,
  header .top-nav .logo {
    margin: auto;
  }

  header.with-background .top-nav-left,
  header .top-nav-left {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  header.with-background .hero,
  header .hero {
    grid-template-columns: 1fr;
    text-align: center;
  }

  header.with-background .hero .hero-image,
  header .hero .hero-image {
    padding-left: 0;
    margin-top: 40px;
  }

  .featured-section {
    padding: 50px 0;
  }

  .featured-section .products {
    grid-template-columns: 1fr;
  }

  .products-header {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-bottom: 15px;
  }

  .blog-section .blog-posts {
    grid-template-columns: 1fr;
    text-align: center;
    grid-template-areas: "blog3" "blog2" "blog1";
  }

  .blog-section .blog-posts .blog-post {
    margin-top: 30px;
  }

  .search-form {
    margin: 14px auto;
    width: 80%;
  }

  .products-section {
    grid-template-columns: 1fr;
  }

  .products-section .sidebar {
    text-align: left;
    padding-top: 50px;
  }

  .products-section .products {
    grid-template-columns: 1fr 1fr;
  }

  .product-section {
    grid-template-columns: 1fr;
  }

  .might-like-section .might-like-grid {
    grid-template-columns: 1fr;
  }

  .checkout-section {
    grid-template-columns: 1fr;
  }

  .checkout-section .checkout-table-container {
    margin-left: 10px;
  }

  .search-results-container-algolia {
    grid-template-columns: 1fr;
  }

  .ais-refinement-list--count {
    margin-left: auto;
    margin-right: 10px;
  }

  .auth-pages {
    margin: 50px auto;
    grid-template-columns: 1fr;
    grid-gap: 40px;
  }

  .auth-pages .auth-right {
    border-left: none;
    padding-left: 0px;
  }
}

/* Small Devices, Tablets */

/* Extra Small Devices, Phones */

/* Custom, iPhone Retina */


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/